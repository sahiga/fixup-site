
	/*
	*
 	* Slide Grid Pro V1.0.0
	* 
 	* http://slidegridpro.com/
	*
 	* Released under the MIT License.
 	*
 	* Copyright (c) 2012 Thorsten Haak - http://thorstenhaak.com/
	*
	* Permission is hereby granted, free of charge, to any person obtaining a copy of this software
	* and associated documentation files (the "Software"), to deal in the Software without restriction,
	* including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
	* and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do
	* so, subject to the following conditions:
	*
	* The above copyright notice and this permission notice shall be included
	* in all copies or substantial portions of the Software.
	*
	* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING
	* BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
	* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
	* DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
	* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
	*
	*/



	(function (l) {
	    var e = {
	        setColumns: 6,
	        setMarginX: 12,
	        setMarginY: 12,
	        setElement: "div",
	        setTransition: !0
	    }, g, h = [],
	        j;
	    Array.prototype.indexOf || (Array.prototype.indexOf = function (b, d) {
	        var c = this.length >>> 0,
	            a = Number(d) || 0,
	            a = 0 > a ? Math.ceil(a) : Math.floor(a);
	        if (0 > a) {
	            for (a += c; a < c; a++) if (a in this && this[a] === b) return a;
	            return -1
	        }
	    });
	    var o = function (b, d, c, a, q) {
	        for (var f = 0; f < a; f++) {
	            b = {};
	            b.x = d + f;
	            b.size = a;
	            b.positionY = c + q + e.setMarginY;
	            h.push(b)
	        }
	    }, p = function (b, d) {
	        for (var c = 0; c < h.length; c++) {
	            var a = h[c];
	            if (d == "x" && a.x == b || d == "positionY" && a.positionY == b) return c
	        }
	    }, m = function (b, d) {
	        for (var c = [], a = 0; a < d; a++) c.push(h[p(b + a, "x")].positionY);
	        var a = Math.min.apply(Math, c),
	            e = Math.max.apply(Math, c);
	        return [a, e, c.indexOf(a)]
	    };
	    l.fn.SlideGridPro = function (b) {
	        b && typeof b === "object" && l.extend(e, b);
	        g = l(this);
	        j = g.width() / e.setColumns;
	        h = [];
	        for (b = 0; b < e.setColumns; b++) o(b, b, 0, 1, -e.setMarginY);
	        g.children(e.setElement).each(function () {
	            var d = l(this);
	            !d.data("size") || d.data("size") < 0 ? d.data("size", 1) : d.data("size") > e.setColumns && d.data("size", e.setColumns);
	            var c;
	            c = d.data("size");
	            if (c > 1) {
	                for (var a = h.length - c, b = false, f, i, g = 0; g < h.length; g++) {
	                    var k = h[g].x;
	                    if (k >= 0 && k <= a) {
	                        var n = m(k, c);
	                        if (b) {
	                            if (n[1] < f[1]) {
	                                f = n;
	                                i = k
	                            }
	                        } else {
	                            b = true;
	                            f = n;
	                            i = k
	                        }
	                    }
	                }
	                c = [i, f[1]]
	            } else {
	                f = m(0, h.length);
	                c = [f[2], f[0]]
	            }
	            a = j * d.data("size") - (d.outerWidth() - d.width());
	            e.setTransition == true ? d.css({
	                position: "relative",
	                "-webkit-transition": "top 1s ease, left 1s ease",
	                "-moz-transition": "top 1s ease, left 1s ease",
	                "-o-transition": "top 1s ease, left 1s ease",
	                "-ms-transition": "top 1s ease, left 1s ease",
	                width: a - e.setMarginX,
	                left: c[0] * j,
	                top: c[1]
	            }) : d.css({
	                position: "relative",
	                width: a - e.setMarginX,
	                left: c[0] * j,
	                top: c[1]
	            });
	            a = d.outerHeight();
	            b = c[0];
	            f = d.data("size");
	            for (i = 0; i < f; i++) {
	                g = p(b + i, "x");
	                h.splice(g, 1)
	            }
	            o(d.attr("id"), c[0], c[1], d.data("size"), a)
	        });
	        b = m(0, h.length);
	        g.css({
	            width: j * e.setColumns - e.setMarginX
	        });
	        g.height(b[1] - e.setMarginY);
	        return this
	    }
	})(jQuery);